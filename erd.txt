부모, 자식 연결할 때, 비식별로 먼저 연결 해보기
->값을 하나씩 대입해보기
-> 자식 엔티티의 주식별자가 식별자의 기능을 잃는다면(해당 식별자가 고유의값의 기능을 잃는다면)
->식별관계로 바꿔주기
(부모의 주식별자가 자식엔티티에서 주식별자의 기능을 함)== 외래 식별자가 주식별자의 역할도 함


엔티티 도출과정
-엔티티후보풀, 엔티티 리스트를 그림
-분석대상 문서를 보고 명사를 찾아 표시
-명사 하나하나에 대해 속성/엔티티인지 구분
-중복된 명사나 유사한 의미의 명사는 하나로 정리
-엔티티 후보풀에 있는 명사들을 검토
-도출된 엔티티에 대하여 구출될 시스템에서 데이터를 관리할 필요가 있는지를 판단




업무기술서를 통해 entity 도출************

회사출결

사원(회사에 근무하는 사원에 대한 정보) : 사번!, 이름, 성별, 주소, 전화번호, 주민등록번호
회사출결(사원들이 해당 날짜에 출결한 것에 대한 정보 ) : 날짜!, 출결사항


고객상담관련 

고객(상담을 받는 고객들에 대한 정보) : 성별 이름, 전화번호,,,,, 고객번호라는 인위적 주식별자
상담일지(수리, 반품 요청에 대한 상담정보) : 타입, 일렬번호!!!!, 상담내용             ==상담 
반품목록(반품요청에 해당하는 정보) : 이름, 전화번호, 반품내역

---AS 부서에 FAX , 반품내역 기록-->조건문으로 프로그래밍 가능


IT 정보학원에 대한 정보

강사(학원에서 수업하는 강사에 대한 정보) : 이름, 전화번호,        강사 코드!!!!
과정(학원에서 수업하는 강의 과정) : 코드!!!!!, 수강료, 기간, 
학생(학원에서 수업듣는 학생에 대한 정보) : 이름, 전화번호,    코드!!!!!



KH 마트 관리해야할 데어터 기술

고객(KH 마트를 이용하는 고객에 대한 정보) : 고객명, 주소, 주민번호, 고객번호!!!
물품(마트에서 관리하는 물품에 대한 정보): 물품명, 단가, 수량, 고유 물품번호!!!
구입(마트에서 물품구입시 필요한 정보) : 구입날짜!!!!!, 구입수량, 총구입가격
제조회사정보(마트에 있는 물품에 대한 제조회사별 정보) : 제조회사명, 주소, 전화번호, 제조회사번호!!!



부모, 자식을 나눈뒤
cardinality 생각(1:1, 1:N 관계 구분)
참여도
기본적으로 비식별관계로 셋팅함 
(자식에 있는 주식별자가 고유한 값이 될경우, 비식별관계 
 				고유한 값이 안될경우==중복값이 생길경우, 주식별자의 기능을 잃으므로,  식별관계 )

=================================================================================================
************UML개념*********************
1. 모델링 : 현실 세계를 단순화 시켜서 표현하는 기법
-절차지향 : 흐름을 중심으로 생각
-객체지향 : 객체를 중심으로 생각 (ex.자바)

객체지향 모델링->UML 공표(공통표기법)
*UML(Unified Modeling Language) : 소프트웨어 개념을 다이어그램으로 그리기위해 사용하는 표기법
-필요성 : 의사소통 좋음, 로드맵 만들 때 유용, 시스템 구축에 대한 기초를 마련, 백엔드 문서용으로 제격
-주의사항 : 핵심적인 기능 위주로 작업(행위 우선)
		반복을 통해 다듬기
		코드를 마음
1) 정적 다이어그램 : 정보 위주
예) 클래스 다이어그램 : 클래스간의 관계를 표현

2) 동적 다이어그램 : 행위,기능위주
예) 유스케이스 다이어그램(시스템과 사용자가 상호작용하는 경우를 나타내는 기능위주), 
    시퀀스 다이어그램 (기능, 시간 흐름에 따른 객체 사이의 상호작용)



1. 유스케이스 다이어그램
2. 클래스 다이어그램
3. 시퀀스 다이어그램




**유스케이스 다이어그램
-동적 다이어그램(행위 위주)
-사용자가 인지 할 수 있는(눈에 보이는) 기능단위
-사용자와 시스템간의 교류를 표현
-사용자 관점에서 시스템의 요구사항(행동)을 설계하는 것
-전 공정에서 사용할 수 있는 수단
-시스템이 해야할 일, 사용자를 함꼐 표현한 모델

관계종류 : 
-포함관계(inclue) : 반드시 해야만 하는 관계 (재사용하면;여러번 사용가능하면 더욱 좋음!!)
  ex) 출근시간 입력 ----------> 로그인(출근시간 입력하려면 로그인을 꼭 해야함)
			  <include>

-확장관계(extend) : 선택적으로 할 수 잇는 관계 
  ex) 게시판 등록  <-----------파일업로드
			  <extend>

-일반화 관계 : 추상화한 하나의 유스케이스로 그룹핑하여 이해도를 높인 관계 
  ex) 게시글 검색--------제목검색
			|-----내용검색


1. 액터식별
2. 유스케이스 식별(사용자가 시스템을 통해 얻으려고 하는 기능을 유스케이스 단위로 도출)
3. (액터, 유스케이스를) 무작위로 단순 배치 
   중복의미는 제거, 불필요한것 제거, 그룹핑 작업
     액테, 유스케이스간 관계 설정


1. 시나리오상 다음과 같은 흐름 인식(시간적 순서)
  ex) 제품조회-제품주문-주문결제 
 
2. 의미에 따른 모델링


-유스케이스의 동일한 기능 제공
-유스테이스의 구체화
-다양한 세부상황 표현 -->하나의 유스케이스로 간단히 표현하고, 유스케이스 시나리오 에서 다양한 세부상황을 표현해야함


***이벤트흐름
기본흐름 : 질못된 것이 없다는 가정하에 시스템이 어떻게 반응하는지 기술 
대안흐름 : 선택흐름(선택적으로 수행), 예외흐름(에러등을 처리하기 위해 수행)

===========================================================================

클래스 다이어그램
-정적 다이어그램

-클래스의 표현 : 
클래스이름/ student(기울임표시-추상메소드:is Abstract 클릭)
속성/(-name: String, 
 	-score:int   (속성명:자료형)
	+PI : double = 3.14 (밑줄)-밑줄:static     --->public static , 변수명은 대문자로, 
						      밑줄-is static, 상수형-readOnly 클릭
연산/ +sumScore() : int, 
 	+angScore(): double (연산자명:자료형)
	+goToSchool():void (기울임표시-추상메소드 : is Abstract 클릭)


**접근제한자
+(public) : 어디서든 접근 가능 
-(private): 자기 클래스에서만 접근 가능
~(default): 같은 패키지내에서만 접근가능 
#(protected) : 같은 or 다른 패키지 내에서 상속구조안에서는 접근 가능 


**클래스 다이어그램의 관계
-연관관계 (실선): 클래스 A, B는 연결되어 있음 (양방향의 경우 화살표 생략)
 방향성이 있는 연관관계 : 메세지 전달의 방향(반대방향 불가능)
 연관관계의 다중성 : 
  다중연관 : 
  

-합성관계 : 거의 안씀(부분 객체가 하나의 전체 객체에 포함, 전체 객체가 사라지면 부분 객체도 사라짐)
 집합관계 : 거의 안씀(부분 객체가 다수의 전체 객체에 의해 공유될 수 있음, 전체 객체가 사라져도 부분 객체는 존재함)

-일반화관계 : 상속구조, 상위클래스(일반클래스)가 하위클래스(더 구체적인 클래스)보다 일반적인 개념/대상임을 의미하는 관계. extends
 실체화관계(인터페이스 실현관계) : 상속구조 , 인터페이스에 명시된 기능을 클래스에 의해 구현한 관계. implements
       cf) 인터페이스가 가지고있는 메소드는 무조건 추상메소드임

-의존관계 : 
  인터페이스 의존관계 : 

cf)           연관관계,       	//        의존관계
-공통점 :  		메세지 전달 통로
-표현식 : 	실선               	//           점선
-관계 지속범위 :A클래스 생명주기//  참조된 A클래스 메소드의 생명주기 
-방향성 : 			 양방향  // 		단방향

-MVC 패턴


하나의 게시글을 선택
선택 게시글에 대한 내용이 보여짐







3.13 할일****

정규화/반정규화 공부------------------0
ppt 자료 나눠준거 다시 읽어보고, 공부
당근 erd cloud 보기
벨로그 로 erd cloud 만들어보기


================================================
drawio 로 자바 뽑아내는법?
수업시간에 클래스다이어그램, 시퀀스 다이어그램 자료?
클래스다이어그램은 어떤 프로그램으로 만드는지?



대출 회원가입
회원가입-이용자이름, 전화번호, 집주소, 이메일주소
회원가입-회원증발급, 바코드(대출시 신분확인)
회원번호
대출가능도서수(5권)


회원가입-회원증발급, 회원번호
회원-이용자이름, 전화번호, 집주소, 이메일 주소,      회원번호, 대출가능 도서수
대출-바코드, 대출가능 도서수


대출:대출일,, 대출No, 반납예정일
회원번호, 이름
도서 : 도서관리번호, 제목,



1. 엔티티 도출
2. ERD로 엔티티 작성
3. 주식별자 선정
-컬럼 중복값 확인
-복합키 사용
-인위적 주식별자
4,부모자식관계 설정
5. 관계 카디널리티(1, 다)
6.관계 참여도 (M, O)
7. 식별, 비식별 

주식별자 : 인스턴스들을 구별하는 기준역할을 하는 속성 
여러 속성일수 잇음
인위적 주식별자 만들수 있다
유일성, 


외래식별자 : 엔티티간의 연결고리 역할하는 속성
부모, 자식으로 구분후, 
자식에게도 공통 속성이 존재하면 외래식별자로 지정//
			존재하지 않으면 자식에게 추가한 후 외래식별자로 지정 





























